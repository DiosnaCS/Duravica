#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ASP
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Text;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Mvc;
    using System.Web.Mvc.Ajax;
    using System.Web.Mvc.Html;
    using System.Web.Optimization;
    using System.Web.Routing;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    using Dubravica;
    
    #line 1 "..\..\Views\Report\_Overview.cshtml"
    using Dubravica.Report.Models;
    
    #line default
    #line hidden
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Views/Report/_Overview.cshtml")]
    public partial class _Views_Report__Overview_cshtml : System.Web.Mvc.WebViewPage<ReportModel>
    {
        public _Views_Report__Overview_cshtml()
        {
        }
        public override void Execute()
        {
WriteLiteral(@"<script>
    /*$(document).ready(function () {
        var startDateTimes = document.getElementsByClassName(""startDT"");
        var endDateTimes = document.getElementsByClassName(""endDT"");
        for (var i = 0; i < startDateTimes.length; i++) {
            console.log(endDateTimes[i].innerHTML);
            endDateTimes[i].innerHTML = getLocalDateTime(startDateTimes[i].innerHTML);
        }
        for (var i = 0; i < endDateTimes.length; i++) {
            endDateTimes[i].innerHTML = getLocalDateTime(endDateTimes[i].innerHTML);
        }
    });

    function getLocalDateTime(date) {
        var date = new Date(date);
        var localDateTime = DateTime(date);
        console.log(date);
        console.log(localDateTime);
        return localDateTime;
    }*/
    function getBatch(id) {
        //var batchId = document.getElementById(""batchid"").textContent;
        console.log(id);
        //var recipeno = document.getElementById(""recipeno"").textContent;
        window.location = ""/Report/getBatch?batchid="" + id; //+ ""&recipeno="" + recipeno;
    }
</script>
");

WriteLiteral("\r\n<table");

WriteLiteral(" class=\"table table-condensed table-bordered table-hover table-responsive\"");

WriteLiteral(">\r\n");

            
            #line 32 "..\..\Views\Report\_Overview.cshtml"
    
            
            #line default
            #line hidden
            
            #line 32 "..\..\Views\Report\_Overview.cshtml"
      if (Model.Batches != null)
        {

            
            #line default
            #line hidden
WriteLiteral(@"            <tr>
                <!--<th style=""width: 65px"">Batch No.</th>
                <th style=""width: 155px"">Start</th>
                <th style=""width: 155px"">End</th>
                <th>Product</th>
                <th style=""width: 55px;"">Recipe</th>
                <th style=""width: 150px"">Differences</th> -->
                <th>Batch No.</th>
                <th>Start</th>
                <th>End</th>
                <th>Product</th>
                <th>Recipe</th>
                <th>Differences</th>
            </tr>
");

            
            #line 48 "..\..\Views\Report\_Overview.cshtml"
            int i = 0;
            foreach (Batch batch in Model.Batches)
            {
                
            
            #line default
            #line hidden
            
            #line 51 "..\..\Views\Report\_Overview.cshtml"
                                  

            
            #line default
            #line hidden
WriteLiteral("                <tr");

WriteAttribute("onclick", Tuple.Create(" onclick=\"", 2035), Tuple.Create("\"", 2064)
, Tuple.Create(Tuple.Create("", 2045), Tuple.Create("getBatch(", 2045), true)
            
            #line 52 "..\..\Views\Report\_Overview.cshtml"
, Tuple.Create(Tuple.Create("", 2054), Tuple.Create<System.Object, System.Int32>(batch.Id
            
            #line default
            #line hidden
, 2054), false)
, Tuple.Create(Tuple.Create("", 2063), Tuple.Create(")", 2063), true)
);

WriteLiteral(" style=\"cursor: pointer;\"");

WriteLiteral(">\r\n                    <td");

WriteLiteral(" id=\"BatchNo\"");

WriteLiteral(">");

            
            #line 53 "..\..\Views\Report\_Overview.cshtml"
                                Write(batch.Id);

            
            #line default
            #line hidden
WriteLiteral("</td>\r\n                    <td");

WriteAttribute("class", Tuple.Create(" class=\"", 2169), Tuple.Create("\"", 2187)
, Tuple.Create(Tuple.Create("", 2177), Tuple.Create("startDT_", 2177), true)
            
            #line 54 "..\..\Views\Report\_Overview.cshtml"
, Tuple.Create(Tuple.Create("", 2185), Tuple.Create<System.Object, System.Int32>(i
            
            #line default
            #line hidden
, 2185), false)
);

WriteLiteral(">");

            
            #line 54 "..\..\Views\Report\_Overview.cshtml"
                                      Write(batch.StartTime);

            
            #line default
            #line hidden
WriteLiteral("</td>\r\n                    <td");

WriteAttribute("class", Tuple.Create(" class=\"", 2235), Tuple.Create("\"", 2251)
, Tuple.Create(Tuple.Create("", 2243), Tuple.Create("endDT_", 2243), true)
            
            #line 55 "..\..\Views\Report\_Overview.cshtml"
, Tuple.Create(Tuple.Create("", 2249), Tuple.Create<System.Object, System.Int32>(i
            
            #line default
            #line hidden
, 2249), false)
);

WriteLiteral(">");

            
            #line 55 "..\..\Views\Report\_Overview.cshtml"
                                    Write(batch.EndTime);

            
            #line default
            #line hidden
WriteLiteral("</td>\r\n                    <td>");

            
            #line 56 "..\..\Views\Report\_Overview.cshtml"
                   Write(batch.RecipeName);

            
            #line default
            #line hidden
WriteLiteral("</td>\r\n                    <td");

WriteLiteral(" id=\"recipeno\"");

WriteLiteral(">");

            
            #line 57 "..\..\Views\Report\_Overview.cshtml"
                                 Write(batch.RecipeNo);

            
            #line default
            #line hidden
WriteLiteral("</td>\r\n");

            
            #line 58 "..\..\Views\Report\_Overview.cshtml"
                    
            
            #line default
            #line hidden
            
            #line 58 "..\..\Views\Report\_Overview.cshtml"
                       string title = ""; 
            
            #line default
            #line hidden
WriteLiteral("\r\n");

            
            #line 59 "..\..\Views\Report\_Overview.cshtml"
                    
            
            #line default
            #line hidden
            
            #line 59 "..\..\Views\Report\_Overview.cshtml"
                     if (batch.maxDiffAM != 0 || batch.minDiffAM != 0) { title += "Amount diff-" + "MAX: " + Math.Round((double)batch.maxDiffAM / 1000, 3) + "kg MIN: " + Math.Round((double)batch.minDiffAM / 1000, 3) + "kg \n"; }

            
            #line default
            #line hidden
WriteLiteral("                    ");

            
            #line 60 "..\..\Views\Report\_Overview.cshtml"
                     if (batch.maxDiffTemp != 0 || batch.minDiffTemp != 0) { title += "Temperature diff-" + "MAX: " + Math.Round((double)batch.maxDiffTemp / 10, 1) + "°C MIN: " + Math.Round((double)batch.minDiffTemp / 10, 2) + "°C \n"; }

            
            #line default
            #line hidden
WriteLiteral("                    ");

            
            #line 61 "..\..\Views\Report\_Overview.cshtml"
                     if (batch.maxDiffST != 0 || batch.minDiffST != 0) { title += "steptime diff- MAX: " + Math.Round((double)batch.maxDiffST / 60, 2) + "min MIN: " + Math.Round((double)batch.minDiffST / 60, 2) + "min \n"; }

            
            #line default
            #line hidden
WriteLiteral("                    ");

            
            #line 62 "..\..\Views\Report\_Overview.cshtml"
                     if (batch.maxDiffIST != 0 || batch.minDiffIST != 0) { title += "Inter step time diff- MAX: " + Math.Round((double)batch.maxDiffIST / 60, 2) + "min MIN: " + Math.Round((double)batch.minDiffIST / 60, 2) + "min \n"; }

            
            #line default
            #line hidden
WriteLiteral("                    <td");

WriteLiteral(" style=\"color: #ff0000;\"");

WriteAttribute("title", Tuple.Create(" title=\"", 3406), Tuple.Create("\"", 3420)
            
            #line 63 "..\..\Views\Report\_Overview.cshtml"
, Tuple.Create(Tuple.Create("", 3414), Tuple.Create<System.Object, System.Int32>(title
            
            #line default
            #line hidden
, 3414), false)
);

WriteLiteral("><span><b>");

            
            #line 63 "..\..\Views\Report\_Overview.cshtml"
                                                                   Write(batch.status);

            
            #line default
            #line hidden
WriteLiteral("</b></span></td>\r\n                </tr>\r\n");

            
            #line 65 "..\..\Views\Report\_Overview.cshtml"
                i++;
            }
        }
    
            
            #line default
            #line hidden
WriteLiteral("\r\n    ");

WriteLiteral("\r\n    ");

WriteLiteral(@"
</table>
<script>
    function DateTime(date) {
        var offset = date.getTimezoneOffset();
        //console.log(offset);
        var offseted_miliseconds = date.getTime() - (offset * 60000);
        var DateTime = new Date(offseted_miliseconds);
        var localDateTime = DateTime.toLocaleString();
        return localDateTime;
    }
</script>
");

            
            #line 104 "..\..\Views\Report\_Overview.cshtml"
 for(int i=0; i < Model.Batches.Count;i++) { 

            
            #line default
            #line hidden
WriteLiteral("<script>\r\n        var year = ");

            
            #line 106 "..\..\Views\Report\_Overview.cshtml"
              Write(Model.Batches[i].StartTime.Year);

            
            #line default
            #line hidden
WriteLiteral(";\r\n        var month = ");

            
            #line 107 "..\..\Views\Report\_Overview.cshtml"
               Write(Model.Batches[i].StartTime.Month);

            
            #line default
            #line hidden
WriteLiteral(";\r\n        var day = ");

            
            #line 108 "..\..\Views\Report\_Overview.cshtml"
             Write(Model.Batches[i].StartTime.Day);

            
            #line default
            #line hidden
WriteLiteral(";\r\n        var hour = ");

            
            #line 109 "..\..\Views\Report\_Overview.cshtml"
              Write(Model.Batches[i].StartTime.Hour);

            
            #line default
            #line hidden
WriteLiteral(";\r\n        var minute = ");

            
            #line 110 "..\..\Views\Report\_Overview.cshtml"
                Write(Model.Batches[i].StartTime.Minute);

            
            #line default
            #line hidden
WriteLiteral(";\r\n        var second = ");

            
            #line 111 "..\..\Views\Report\_Overview.cshtml"
                Write(Model.Batches[i].StartTime.Second);

            
            #line default
            #line hidden
WriteLiteral(";\r\n        var date = new Date(year, month - 1, day, hour, minute, second, 0);\r\n " +
"       var yearExp = ");

            
            #line 113 "..\..\Views\Report\_Overview.cshtml"
                 Write(Model.Batches[i].EndTime.Year);

            
            #line default
            #line hidden
WriteLiteral(";\r\n        var monthExp = ");

            
            #line 114 "..\..\Views\Report\_Overview.cshtml"
                  Write(Model.Batches[i].EndTime.Month);

            
            #line default
            #line hidden
WriteLiteral(";\r\n        var dayExp = ");

            
            #line 115 "..\..\Views\Report\_Overview.cshtml"
                Write(Model.Batches[i].EndTime.Day);

            
            #line default
            #line hidden
WriteLiteral(";\r\n        var hourExp = ");

            
            #line 116 "..\..\Views\Report\_Overview.cshtml"
                 Write(Model.Batches[i].EndTime.Hour);

            
            #line default
            #line hidden
WriteLiteral(";\r\n        var minuteExp = ");

            
            #line 117 "..\..\Views\Report\_Overview.cshtml"
                   Write(Model.Batches[i].EndTime.Minute);

            
            #line default
            #line hidden
WriteLiteral(";\r\n        var secondExp = ");

            
            #line 118 "..\..\Views\Report\_Overview.cshtml"
                   Write(Model.Batches[i].EndTime.Second);

            
            #line default
            #line hidden
WriteLiteral(";\r\n        var expDate = new Date(yearExp, monthExp - 1, dayExp, hourExp, minuteE" +
"xp, secondExp, 0);\r\n        var localDateTime = DateTime(date);\r\n        documen" +
"t.getElementById(\"startDT_\" + \"");

            
            #line 121 "..\..\Views\Report\_Overview.cshtml"
                                         Write(i);

            
            #line default
            #line hidden
WriteLiteral("\").innerText = localDateTime;\r\n        var localExpDateTime = DateTime(expDate);\r" +
"\n        document.getElementById(\"endDT_\" + \"");

            
            #line 123 "..\..\Views\Report\_Overview.cshtml"
                                       Write(i);

            
            #line default
            #line hidden
WriteLiteral("\").innerHTML = localExpDateTime;\r\n</script>\r\n");

            
            #line 125 "..\..\Views\Report\_Overview.cshtml"
}

            
            #line default
            #line hidden
WriteLiteral("\r\n\r\n");

        }
    }
}
#pragma warning restore 1591
