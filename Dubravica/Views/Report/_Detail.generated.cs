#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ASP
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Text;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Mvc;
    using System.Web.Mvc.Ajax;
    using System.Web.Mvc.Html;
    using System.Web.Optimization;
    using System.Web.Routing;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    using Dubravica;
    
    #line 1 "..\..\Views\Report\_Detail.cshtml"
    using Dubravica.Report.Models;
    
    #line default
    #line hidden
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Views/Report/_Detail.cshtml")]
    public partial class _Views_Report__Detail_cshtml : System.Web.Mvc.WebViewPage<ReportModel>
    {
        public _Views_Report__Detail_cshtml()
        {
        }
        public override void Execute()
        {
            
            #line 4 "..\..\Views\Report\_Detail.cshtml"
  
    ViewBag.TitleDetail = "Batch detail:";
    string unit = "";
    string statusClass = "";
    string traceToolpit = "";
    int tracePos = 0;

            
            #line default
            #line hidden
WriteLiteral("\r\n\r\n<h4>");

            
            #line 12 "..\..\Views\Report\_Detail.cshtml"
Write(ViewBag.TitleDetail);

            
            #line default
            #line hidden
WriteLiteral("</h4>\r\n");

            
            #line 13 "..\..\Views\Report\_Detail.cshtml"
   if (ViewBag.Steps != null)
{

            
            #line default
            #line hidden
WriteLiteral("<div");

WriteLiteral(" class=\"det-header\"");

WriteLiteral(">    \r\n    <p>Batch ID:<span>");

            
            #line 16 "..\..\Views\Report\_Detail.cshtml"
                 Write(ViewBag.Steps.Id);

            
            #line default
            #line hidden
WriteLiteral("</span></p>\r\n    <p>Bowl ID:<span>");

            
            #line 17 "..\..\Views\Report\_Detail.cshtml"
                Write(ViewBag.Steps.BowlId);

            
            #line default
            #line hidden
WriteLiteral("</span></p>\r\n    <p>Recipe:<span>");

            
            #line 18 "..\..\Views\Report\_Detail.cshtml"
               Write(ViewBag.Steps.RecipeNo);

            
            #line default
            #line hidden
WriteLiteral(" - ");

            
            #line 18 "..\..\Views\Report\_Detail.cshtml"
                                         Write(ViewBag.Steps.RecipeName);

            
            #line default
            #line hidden
WriteLiteral("</span></p>\r\n    <p>Time:<span>");

            
            #line 19 "..\..\Views\Report\_Detail.cshtml"
             Write(ViewBag.Steps.StartTime);

            
            #line default
            #line hidden
WriteLiteral("</span>-<span>");

            
            #line 19 "..\..\Views\Report\_Detail.cshtml"
                                                   Write(ViewBag.Steps.EndTime);

            
            #line default
            #line hidden
WriteLiteral("</span></p>    \r\n</div>\r\n");

            
            #line 21 "..\..\Views\Report\_Detail.cshtml"
} 
            
            #line default
            #line hidden
WriteLiteral("\r\n<div>\r\n    <table");

WriteLiteral(" class=\"table table-bordered thin-row det-tab\"");

WriteLiteral(">\r\n        <tr>\r\n            <th");

WriteLiteral(" style=\"width: 40px;\"");

WriteLiteral(">Step</th>\r\n            <th");

WriteLiteral(" style=\"width: 155px\"");

WriteLiteral(">Start</th>\r\n            <th");

WriteLiteral(" style=\"width: 155px\"");

WriteLiteral(">End</th>\r\n            <th");

WriteLiteral(" style=\"width: 100px\"");

WriteLiteral(">Operation</th>\r\n            <th");

WriteLiteral(" style=\"width: 105px\"");

WriteLiteral(">Device ID</th>\r\n            <th");

WriteLiteral(" style=\"min-width: 160px\"");

WriteLiteral(">Device Name</th>\r\n            <th");

WriteLiteral(" style=\"width: 105px\"");

WriteLiteral(">Need</th>\r\n            <th");

WriteLiteral(" style=\"width: 105px\"");

WriteLiteral(">Done</th>\r\n            <th");

WriteLiteral(" style=\"width: 105px\"");

WriteLiteral(">Diff</th>\r\n            <th");

WriteLiteral(" style=\"width: 100px\"");

WriteLiteral(">Status</th>\r\n        </tr>\r\n");

            
            #line 36 "..\..\Views\Report\_Detail.cshtml"
        
            
            #line default
            #line hidden
            
            #line 36 "..\..\Views\Report\_Detail.cshtml"
          
            if (ViewBag.Steps != null)
            {
                int toElementUnits = 1;
                int id = 0;
                foreach (RecipeStep step in ViewBag.Steps.BatchSteps)
                {
                    traceToolpit = "";
                    switch (step.OperationNr)
                    {
                        case OperationType.Dosing:
                            if (ViewBag.traceNumbers.Count >= tracePos && ViewBag.traceNumbers.Count > 0)
                            {
                                traceToolpit = "Trace ID:" + ViewBag.traceNumbers[tracePos];
                                tracePos++;
                            }
                            unit = "kg";
                            toElementUnits = 1000;
                            break;
                        case OperationType.Kneading:
                            unit = "°C";
                            toElementUnits = 10;
                            break;
                        case OperationType.Ripping:
                            unit = "min";
                            toElementUnits = 10;
                            break;
                    }
                    double need = (double)step.Need / (double)toElementUnits;
                    double done = (double)step.Done / (double)toElementUnits;
                    double diff = (step.Done - step.Need) / toElementUnits;
                    if (step.Status.HasFlag(StepStatus.OK))
                    {
                        statusClass = "status-ok";
                    }
                    if (step.Status.HasFlag(StepStatus.ForcedStart) || step.Status.HasFlag(StepStatus.Error)) {
                        statusClass = "status-nok";
                    }
                    if (step.Status.HasFlag(StepStatus.Skipped) || step.Status.HasFlag(StepStatus.Cancelled)) {
                        statusClass = "status-skipped";
                    }

            
            #line default
            #line hidden
WriteLiteral("                    <tr");

WriteLiteral(" data-toggle=\"tooltip\"");

WriteLiteral(" data-placement=\"left\"");

WriteAttribute("title", Tuple.Create(" title=\"", 3263), Tuple.Create("\"", 3284)
            
            #line 77 "..\..\Views\Report\_Detail.cshtml"
, Tuple.Create(Tuple.Create("", 3271), Tuple.Create<System.Object, System.Int32>(traceToolpit
            
            #line default
            #line hidden
, 3271), false)
);

WriteLiteral(">\r\n                        <td>");

            
            #line 78 "..\..\Views\Report\_Detail.cshtml"
                       Write(step.step);

            
            #line default
            #line hidden
WriteLiteral("</td>\r\n                        <td");

WriteAttribute("id", Tuple.Create(" id=\"", 3360), Tuple.Create("\"", 3378)
, Tuple.Create(Tuple.Create("", 3365), Tuple.Create("startStep_", 3365), true)
            
            #line 79 "..\..\Views\Report\_Detail.cshtml"
, Tuple.Create(Tuple.Create("", 3375), Tuple.Create<System.Object, System.Int32>(id
            
            #line default
            #line hidden
, 3375), false)
);

WriteLiteral(">");

            
            #line 79 "..\..\Views\Report\_Detail.cshtml"
                                          Write(step.StartTime);

            
            #line default
            #line hidden
WriteLiteral("</td>\r\n                        <td");

WriteAttribute("id", Tuple.Create(" id=\"", 3429), Tuple.Create("\"", 3445)
, Tuple.Create(Tuple.Create("", 3434), Tuple.Create("endStep_", 3434), true)
            
            #line 80 "..\..\Views\Report\_Detail.cshtml"
, Tuple.Create(Tuple.Create("", 3442), Tuple.Create<System.Object, System.Int32>(id
            
            #line default
            #line hidden
, 3442), false)
);

WriteLiteral(">");

            
            #line 80 "..\..\Views\Report\_Detail.cshtml"
                                        Write(step.EndTime);

            
            #line default
            #line hidden
WriteLiteral("</td>\r\n                        <td>");

            
            #line 81 "..\..\Views\Report\_Detail.cshtml"
                       Write(step.OperationNr);

            
            #line default
            #line hidden
WriteLiteral("</td>\r\n                        <td>");

            
            #line 82 "..\..\Views\Report\_Detail.cshtml"
                       Write(step.DeviceId);

            
            #line default
            #line hidden
WriteLiteral("</td>\r\n                        <td>");

            
            #line 83 "..\..\Views\Report\_Detail.cshtml"
                       Write(step.Device);

            
            #line default
            #line hidden
WriteLiteral("</td>\r\n                        <td");

WriteLiteral(" class=\"text-right\"");

WriteLiteral(" data-toggle=\"tooltip\"");

WriteLiteral(" data-placement=\"top\"");

WriteLiteral(">");

            
            #line 84 "..\..\Views\Report\_Detail.cshtml"
                                                                                     Write(need);

            
            #line default
            #line hidden
WriteLiteral(" ");

            
            #line 84 "..\..\Views\Report\_Detail.cshtml"
                                                                                           Write(unit);

            
            #line default
            #line hidden
WriteLiteral("&ensp;</td>\r\n                        <td");

WriteLiteral(" class=\"text-right\"");

WriteLiteral(">");

            
            #line 85 "..\..\Views\Report\_Detail.cshtml"
                                          Write(done);

            
            #line default
            #line hidden
WriteLiteral(" ");

            
            #line 85 "..\..\Views\Report\_Detail.cshtml"
                                                Write(unit);

            
            #line default
            #line hidden
WriteLiteral("&ensp;</td>\r\n                        <td");

WriteLiteral(" class=\"text-right\"");

WriteLiteral(">");

            
            #line 86 "..\..\Views\Report\_Detail.cshtml"
                                          Write(diff);

            
            #line default
            #line hidden
WriteLiteral(" ");

            
            #line 86 "..\..\Views\Report\_Detail.cshtml"
                                                Write(unit);

            
            #line default
            #line hidden
WriteLiteral("&nbsp;</td>\r\n                        <td");

WriteAttribute("class", Tuple.Create(" class=\"", 3898), Tuple.Create("\"", 3918)
            
            #line 87 "..\..\Views\Report\_Detail.cshtml"
, Tuple.Create(Tuple.Create("", 3906), Tuple.Create<System.Object, System.Int32>(statusClass
            
            #line default
            #line hidden
, 3906), false)
);

WriteLiteral(">");

            
            #line 87 "..\..\Views\Report\_Detail.cshtml"
                                            Write(step.Status);

            
            #line default
            #line hidden
WriteLiteral("</td>\r\n                    </tr>\r\n");

            
            #line 89 "..\..\Views\Report\_Detail.cshtml"
                    id++;
                }
                for (int j = 0; j < (ViewBag.Steps.StepsCount - ViewBag.Steps.BatchSteps.Count); j++)
                {

            
            #line default
            #line hidden
WriteLiteral("                    <tr");

WriteLiteral(" data-toggle=\"tooltip\"");

WriteLiteral(" data-placement=\"left\"");

WriteLiteral(" title=\"Expected step\"");

WriteLiteral(@">
                        <td>&ensp;</td>
                        <td>&ensp;</td>
                        <td>&ensp;</td>
                        <td>&ensp;</td>
                        <td>&ensp;</td>
                        <td>&ensp;</td>
                        <td");

WriteLiteral(" class=\"text-right\"");

WriteLiteral(" data-toggle=\"tooltip\"");

WriteLiteral(" data-placement=\"top\"");

WriteLiteral(">&ensp;</td>\r\n                        <td");

WriteLiteral(" class=\"text-right\"");

WriteLiteral(">&ensp;</td>\r\n                        <td");

WriteLiteral(" class=\"text-right\"");

WriteLiteral(">&ensp;</td>\r\n                        <td");

WriteLiteral(" class=\"status-ok\"");

WriteLiteral(">&ensp;</td>\r\n                    </tr>\r\n");

            
            #line 105 "..\..\Views\Report\_Detail.cshtml"
                }
            }
        
            
            #line default
            #line hidden
WriteLiteral(@"
    </table>
    <script>
        function DateTime(date) {
            var offset = date.getTimezoneOffset();
            console.log(offset);
            var offseted_miliseconds = date.getTime() - (offset * 60000);
            var DateTime = new Date(offseted_miliseconds);
            var localDateTime = DateTime.toLocaleString();
            return localDateTime;
        }
    </script>
");

            
            #line 119 "..\..\Views\Report\_Detail.cshtml"
    
            
            #line default
            #line hidden
            
            #line 119 "..\..\Views\Report\_Detail.cshtml"
      int i = 0; 
            
            #line default
            #line hidden
WriteLiteral("\r\n");

            
            #line 120 "..\..\Views\Report\_Detail.cshtml"
    
            
            #line default
            #line hidden
            
            #line 120 "..\..\Views\Report\_Detail.cshtml"
     foreach(RecipeStep step in ViewBag.Steps.BatchSteps)
    {

            
            #line default
            #line hidden
WriteLiteral("        <script>\r\n        var year = ");

            
            #line 123 "..\..\Views\Report\_Detail.cshtml"
              Write(step.StartTime.Year);

            
            #line default
            #line hidden
WriteLiteral(";\r\n        var month = ");

            
            #line 124 "..\..\Views\Report\_Detail.cshtml"
               Write(step.StartTime.Month);

            
            #line default
            #line hidden
WriteLiteral(";\r\n        var day = ");

            
            #line 125 "..\..\Views\Report\_Detail.cshtml"
             Write(step.StartTime.Day);

            
            #line default
            #line hidden
WriteLiteral(";\r\n        var hour = ");

            
            #line 126 "..\..\Views\Report\_Detail.cshtml"
              Write(step.StartTime.Hour);

            
            #line default
            #line hidden
WriteLiteral(";\r\n        var minute = ");

            
            #line 127 "..\..\Views\Report\_Detail.cshtml"
                Write(step.StartTime.Minute);

            
            #line default
            #line hidden
WriteLiteral(";\r\n        var second = ");

            
            #line 128 "..\..\Views\Report\_Detail.cshtml"
                Write(step.StartTime.Second);

            
            #line default
            #line hidden
WriteLiteral(";\r\n        var date = new Date(year, month - 1, day, hour, minute, second, 0);\r\n " +
"       console.log(date);\r\n        var yearExp = ");

            
            #line 131 "..\..\Views\Report\_Detail.cshtml"
                 Write(step.EndTime.Year);

            
            #line default
            #line hidden
WriteLiteral(";\r\n        var monthExp = ");

            
            #line 132 "..\..\Views\Report\_Detail.cshtml"
                  Write(step.EndTime.Month);

            
            #line default
            #line hidden
WriteLiteral(";\r\n        var dayExp = ");

            
            #line 133 "..\..\Views\Report\_Detail.cshtml"
                Write(step.EndTime.Day);

            
            #line default
            #line hidden
WriteLiteral(";\r\n        var hourExp = ");

            
            #line 134 "..\..\Views\Report\_Detail.cshtml"
                 Write(step.EndTime.Hour);

            
            #line default
            #line hidden
WriteLiteral(";\r\n        var minuteExp = ");

            
            #line 135 "..\..\Views\Report\_Detail.cshtml"
                   Write(step.EndTime.Minute);

            
            #line default
            #line hidden
WriteLiteral(";\r\n        var secondExp = ");

            
            #line 136 "..\..\Views\Report\_Detail.cshtml"
                   Write(step.EndTime.Second);

            
            #line default
            #line hidden
WriteLiteral(";\r\n        var expDate = new Date(yearExp, monthExp - 1, dayExp, hourExp, minuteE" +
"xp, secondExp, 0);\r\n            var localDateTime = DateTime(date);\r\n           " +
" document.getElementById(\"starStep_\" + \"");

            
            #line 139 "..\..\Views\Report\_Detail.cshtml"
                                              Write(i);

            
            #line default
            #line hidden
WriteLiteral("\").innerHTML = localDateTime;\r\n        var localExpDateTime = DateTime(expDate);\r" +
"\n        document.getElementById(\"endStep_\" + \"");

            
            #line 141 "..\..\Views\Report\_Detail.cshtml"
                                         Write(i);

            
            #line default
            #line hidden
WriteLiteral("\").innerHTML = localExpDateTime;\r\n        </script>\r\n");

            
            #line 143 "..\..\Views\Report\_Detail.cshtml"
        i++;
    }

            
            #line default
            #line hidden
WriteLiteral("</div>\r\n\r\n");

        }
    }
}
#pragma warning restore 1591
